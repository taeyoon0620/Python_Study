Python의 while문을 활용한 무한 반복과 조건 사용법에 대해 자세히 설명하겠습니다.

1. 무한 반복 (Infinite Loop)
while문의 조건을 True로 설정하면, 조건이 항상 참으로 평가되므로 무한히 반복됩니다. 이는 서버 유지, 실시간 데이터 처리, 사용자 입력 대기 등의 작업에서 유용하게 사용됩니다.

구문
python
코드 복사
while True:
    # 실행할 코드
예제: 사용자 입력 대기

while True:
    user_input = input("종료하려면 'exit'를 입력하세요: ")
    if user_input.lower() == 'exit':  # 'exit' 입력 시 대소문자 무관 종료
        print("프로그램을 종료합니다.")
        break  # 무한 반복 탈출
    else:
        print(f"입력한 값: {user_input}")
예제: 간단한 서버 시뮬레이션

while True:
    print("서버가 실행 중입니다...")
    # 실제 서버 작업 코드 위치
    break  # 실제 상황에서는 종료 조건 설정 필요
break와 함께 사용
무한 반복은 반드시 종료 조건을 포함해야 효율적입니다.
break 키워드를 사용하여 반복문을 중단할 수 있습니다.
예제

count = 0
while True:
    print(f"반복 횟수: {count}")
    count += 1
    if count == 5:  # 5번 반복 후 종료
        print("5번 반복 후 종료합니다.")
        break
무한 반복 활용 사례
대기 작업: 사용자의 명령 입력을 기다리는 프로그램
스트림 처리: 계속 데이터를 받는 네트워크 스트림 처리
게임 루프: 게임이 종료될 때까지 계속 실행
2. 조건 활용
while문은 조건이 True일 때만 실행되므로 다양한 조건을 활용해 반복을 제어할 수 있습니다.

조건과 종료
예제: 숫자 맞추기 게임

import random

target = random.randint(1, 10)
while True:
    guess = int(input("1~10 사이의 숫자를 맞춰보세요: "))
    if guess < target:
        print("더 큰 숫자입니다.")
    elif guess > target:
        print("더 작은 숫자입니다.")
    else:
        print("정답입니다!")
        break
반복 조건 설정
예제: 숫자 카운팅

count = 0
while count < 10:  # count가 10보다 작을 때 실행
    print(count)
    count += 1  # 조건을 변화시켜 반복 종료
continue 활용
continue는 반복문의 나머지 코드를 건너뛰고 다음 반복으로 넘어갑니다.
예제: 특정 숫자 건너뛰기

i = 0
while i < 10:
    i += 1
    if i == 5:  # 5일 때 건너뛰기
        continue
    print(i)
출력:

코드 복사
1
2
3
4
6
7
8
9
10
else와 함께 사용
while문에 else를 추가하면, 반복문이 정상적으로 종료되었을 때 실행됩니다. 만약 break로 반복문을 종료하면 else는 실행되지 않습니다.

예제

x = 0
while x < 5:
    print(x)
    x += 1
else:
    print("반복문이 정상 종료되었습니다.")
break와 함께 사용하는 경우
python
코드 복사
x = 0
while x < 5:
    print(x)
    if x == 3:
        break  # 반복문 강제 종료
    x += 1
else:
    print("반복문이 정상 종료되었습니다.")  # 실행되지 않음
출력:

코드 복사
0
1
2
3
3. 무한 반복과 조건 활용 사례
a. 로그인 시도
python
코드 복사
correct_password = "1234"

while True:
    password = input("비밀번호를 입력하세요: ")
    if password == correct_password:
        print("로그인 성공!")
        break
    else:
        print("비밀번호가 틀렸습니다. 다시 시도하세요.")
b. 입력 값 검증


while True:
    number = input("양수를 입력하세요: ")
    if number.isdigit() and int(number) > 0:
        print(f"입력한 양수: {number}")
        break
    else:
        print("잘못된 입력입니다. 다시 시도하세요.")
요약
무한 반복은 특정 조건 없이 작업을 지속할 때 유용합니다.
조건 활용으로 반복을 제어하며, break와 continue를 통해 유연한 흐름을 만들 수 있습니다.
적절한 종료 조건을 추가해 비효율적인 반복을 방지해야 합니다
